<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.connie.goods.core.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="cn.connie.goods.core.entity.Order">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="payment_no" jdbcType="VARCHAR" property="paymentNo" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="payment" jdbcType="DECIMAL" property="payment" />
    <result column="payment_type" jdbcType="TINYINT" property="paymentType" />
    <result column="goods_sum_fee" jdbcType="DECIMAL" property="goodsSumFee" />
    <result column="post_fee" jdbcType="DECIMAL" property="postFee" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="send_status" jdbcType="TINYINT" property="sendStatus" />
    <result column="refund_no" jdbcType="VARCHAR" property="refundNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_no, payment_no, user_id, payment, payment_type, goods_sum_fee, post_fee, 
    status, payment_time, create_time, address, mobile, nickname, send_status, refund_no
  </sql>
  <select id="selectByExample" parameterType="cn.connie.goods.core.entity.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_order
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.connie.goods.core.entity.OrderExample">
    delete from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.connie.goods.core.entity.Order">
    insert into t_order (id, order_no, payment_no, 
      user_id, payment, payment_type, 
      goods_sum_fee, post_fee, status, 
      payment_time, create_time, address, 
      mobile, nickname, send_status, 
      refund_no)
    values (#{id,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{paymentNo,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{payment,jdbcType=DECIMAL}, #{paymentType,jdbcType=TINYINT}, 
      #{goodsSumFee,jdbcType=DECIMAL}, #{postFee,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{sendStatus,jdbcType=TINYINT}, 
      #{refundNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.connie.goods.core.entity.Order">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="paymentNo != null">
        payment_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="goodsSumFee != null">
        goods_sum_fee,
      </if>
      <if test="postFee != null">
        post_fee,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="sendStatus != null">
        send_status,
      </if>
      <if test="refundNo != null">
        refund_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentNo != null">
        #{paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="goodsSumFee != null">
        #{goodsSumFee,jdbcType=DECIMAL},
      </if>
      <if test="postFee != null">
        #{postFee,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sendStatus != null">
        #{sendStatus,jdbcType=TINYINT},
      </if>
      <if test="refundNo != null">
        #{refundNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.connie.goods.core.entity.OrderExample" resultType="java.lang.Long">
    select count(*) from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentNo != null">
        payment_no = #{record.paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.payment != null">
        payment = #{record.payment,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentType != null">
        payment_type = #{record.paymentType,jdbcType=TINYINT},
      </if>
      <if test="record.goodsSumFee != null">
        goods_sum_fee = #{record.goodsSumFee,jdbcType=DECIMAL},
      </if>
      <if test="record.postFee != null">
        post_fee = #{record.postFee,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.sendStatus != null">
        send_status = #{record.sendStatus,jdbcType=TINYINT},
      </if>
      <if test="record.refundNo != null">
        refund_no = #{record.refundNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_order
    set id = #{record.id,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      payment_no = #{record.paymentNo,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      payment = #{record.payment,jdbcType=DECIMAL},
      payment_type = #{record.paymentType,jdbcType=TINYINT},
      goods_sum_fee = #{record.goodsSumFee,jdbcType=DECIMAL},
      post_fee = #{record.postFee,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=TINYINT},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      send_status = #{record.sendStatus,jdbcType=TINYINT},
      refund_no = #{record.refundNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.connie.goods.core.entity.Order">
    update t_order
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentNo != null">
        payment_no = #{paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="goodsSumFee != null">
        goods_sum_fee = #{goodsSumFee,jdbcType=DECIMAL},
      </if>
      <if test="postFee != null">
        post_fee = #{postFee,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sendStatus != null">
        send_status = #{sendStatus,jdbcType=TINYINT},
      </if>
      <if test="refundNo != null">
        refund_no = #{refundNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.connie.goods.core.entity.Order">
    update t_order
    set order_no = #{orderNo,jdbcType=VARCHAR},
      payment_no = #{paymentNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      payment = #{payment,jdbcType=DECIMAL},
      payment_type = #{paymentType,jdbcType=TINYINT},
      goods_sum_fee = #{goodsSumFee,jdbcType=DECIMAL},
      post_fee = #{postFee,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      send_status = #{sendStatus,jdbcType=TINYINT},
      refund_no = #{refundNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="lockSelectByPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=VARCHAR}
    for update
  </select>
</mapper>